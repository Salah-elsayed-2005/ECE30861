#!/usr/bin/env bash
set -euo pipefail
here="$(cd "$(dirname "$0")" && pwd)"
export PYTHONPATH="$here:${PYTHONPATH:-}"

pick_python() {
  command -v python3 >/dev/null 2>&1 && { echo python3; return; }
  command -v python  >/dev/null 2>&1 && { echo python; return; }
  command -v py >/dev/null 2>&1 && { echo "py -3"; return; }
  echo ""
}
PY_CMD="${PY_CMD:-$(pick_python)}"
[[ -z "$PY_CMD" ]] && { echo "[run] ERROR: no Python interpreter found." >&2; exit 1; }

cmd="${1:-}"
[[ -z "$cmd" ]] && { echo "Usage: ./run install|test|/abs/urls.txt|https://url" >&2; exit 1; }

if [[ "$cmd" == "install" ]]; then
  $PY_CMD -m pip install --user -q --upgrade pip
  if [[ -f "$here/requirements.txt" ]]; then
    $PY_CMD -m pip install --user -r "$here/requirements.txt"
  else
    $PY_CMD -m pip install --user requests pytest pytest-cov jsonschema
  fi
  echo "OK"
  exit 0
fi

if [[ "$cmd" == "test" ]]; then
  exec $PY_CMD "$here/CLI.py" test
fi

if [[ -f "$cmd" ]]; then
  # URL file mode
  exec $PY_CMD "$here/CLI.py" score --urls-file "$cmd" -o -
fi

# Single URL mode
exec $PY_CMD "$here/CLI.py" score --url "$cmd" -o -

